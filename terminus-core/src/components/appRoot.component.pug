title-bar(*ngIf='config.store.appearance.frame == "full" && config.store.appearance.dock == "off"')

.content(
    [class.tabs-on-top]='config.store.appearance.tabsOnTop'    
)
    .tab-bar
        .tabs
            tab-header(
                *ngFor='let tab of app.tabs; let idx = index',
                [index]='idx',
                [tab]='tab',
                [active]='tab == app.activeTab',
                [hasActivity]='tab.hasActivity',
                @animateTab,
                (click)='app.selectTab(tab)',
                (closeClicked)='app.closeTab(tab)',
            )
        
        button.btn.btn-secondary(
            *ngFor='let button of getLeftToolbarButtons()',
            [title]='button.title',
            (click)='button.click()',
        )
            i.fa([class]='"fa fa-" + button.icon')
                
        .drag-space

        button.btn.btn-secondary(
            *ngFor='let button of getRightToolbarButtons()',
            [title]='button.title',
            (click)='button.click()',
        )
            i.fa([class]='"fa fa-" + button.icon')

        button.btn.btn-secondary.btn-minimize(
            *ngIf='config.store.appearance.frame == "thin"',
            (click)='hostApp.minimize()',
        )
            i.fa.fa-window-minimize
        button.btn.btn-secondary.btn-maximize(
            *ngIf='config.store.appearance.frame == "thin"',
            (click)='hostApp.toggleMaximize()',
        )
            i.fa.fa-window-maximize
        button.btn.btn-secondary.btn-close(
            *ngIf='config.store.appearance.frame == "thin"',
            (click)='hostApp.quit()',
        )
            i.fa.fa-close

    start-page(*ngIf='app.tabs.length == 0')

    tab-body(
        *ngFor='let tab of app.tabs; trackBy: tab?.id', 
        [active]='tab == app.activeTab',
        [tab]='tab',
        [scrollable]='tab.scrollable',
    )

toaster-container([toasterconfig]="toasterconfig")
ng-template(ngbModalContainer)
