.alert.alert-danger(*ngIf='errorMessage')
    strong Error in {{erroredPlugin}}:
    pre {{errorMessage}}

button.btn.btn-outline-info.btn-sm.pull-right((click)='openPluginsFolder()')
    i.fa.fa-folder
    span Plugins folder
    
h3.mb-1 Installed

.mb-3.d-flex.w-100.align-items-center(*ngFor='let plugin of pluginManager.installedPlugins|orderBy:"name"')
    button.btn.btn-outline-danger.active.mr-2(
        *ngIf='config.store.pluginBlacklist.includes(plugin.name)',
        (click)='enablePlugin(plugin)'
    )
        i.fa.fa-fw.fa-pause
    button.btn.btn-outline-secondary.mr-2(
        *ngIf='!config.store.pluginBlacklist.includes(plugin.name)',
        (click)='disablePlugin(plugin)'
    )
        i.fa.fa-fw.fa-check

    .mr-auto.d-flex.flex-column
        div
            strong {{plugin.name}}
            small.text-muted.ml-1 {{plugin.version}} / {{plugin.author}}
        a.text-muted.mb-0((click)='showPluginInfo(plugin)')
            small {{plugin.description}}

    button.btn.btn-primary.ml-2(
        *ngIf='npmInstalled && knownUpgrades[plugin.name]',
        (click)='upgradePlugin(plugin)',
        [disabled]='busy[plugin.name] != undefined'
    )
        i.fa.fa-fw.fa-arrow-up(*ngIf='busy[plugin.name] != BusyState.Installing')
        i.fa.fa-fw.fa-circle-o-notch.fa-spin(*ngIf='busy[plugin.name] == BusyState.Installing')
        span Upgrade ({{knownUpgrades[plugin.name].version}})
        
    button.btn.btn-outline-danger.ml-2(
        (click)='uninstallPlugin(plugin)', 
        *ngIf='!plugin.isBuiltin && npmInstalled',
        [disabled]='busy[plugin.name] != undefined'
    )
        i.fa.fa-fw.fa-trash-o(*ngIf='busy[plugin.name] != BusyState.Uninstalling')
        i.fa.fa-fw.fa-circle-o-notch.fa-spin(*ngIf='busy[plugin.name] == BusyState.Uninstalling')

.text-center.mt-5(*ngIf='npmMissing')
    h4 npm not installed
    p.mb-2 npm is required to install Terminus plugins.
    .btn-group
        button.btn.btn-outline-primary((click)='downloadNPM()')
            i.fa.fa-download
            span Get npm
        button.btn.btn-outline-info((click)='checkNPM()')
            i.fa.fa-refresh
            span Try again

div(*ngIf='npmInstalled')
    h3.mt-4 Available

    .input-group.mb-3
        .input-group-prepend
            .input-group-text
                i.fa.fa-fw.fa-circle-o-notch.fa-spin(*ngIf='!availablePluginsReady')
                i.fa.fa-fw.fa-search(*ngIf='availablePluginsReady')
        input.form-control(
            type='text',
            [(ngModel)]='_1',
            (ngModelChange)='searchAvailable(_1)',
            placeholder='Search plugins'
        )


    .mb-4(*ngIf='availablePlugins$')
        ng-container(*ngFor='let plugin of (availablePlugins$|async|orderBy:"name")')
            .d-flex.w-100.align-items-center.mb-3(*ngIf='!isAlreadyInstalled(plugin)')
                button.btn.btn-primary.mr-2(
                    (click)='installPlugin(plugin)',
                    [disabled]='busy[plugin.name] != undefined'
                )
                    i.fa.fa-fw.fa-download(*ngIf='busy[plugin.name] != BusyState.Installing')
                    i.fa.fa-fw.fa-circle-o-notch.fa-spin(*ngIf='busy[plugin.name] == BusyState.Installing')
                
                div((click)='showPluginInfo(plugin)')
                    div
                        strong {{plugin.name}}
                        small.text-muted.ml-1 {{plugin.version}} / {{plugin.author}}
                        i.fa.fa-check.text-success.ml-1(*ngIf='plugin.isOfficial', title='Official')
                    small.text-muted {{plugin.description}}
