button.btn.btn-outline-warning.btn-block(*ngIf='restartRequested', '(click)'='restartApp()') Restart the app to apply changes

ngb-tabset(type='tabs')
    ngb-tab
        template(ngbTabTitle)
            | Application
        template(ngbTabContent)
            .form-group
                label Window frame
                br
                div(
                    '[(ngModel)]'='config.store.appearance.useNativeFrame'
                    '(ngModelChange)'='config.save(); requestRestart()'
                    ngbRadioGroup
                )
                    label.btn.btn-secondary
                        input(
                            type='radio',
                            [value]='true'
                        )
                        | Native
                    label.btn.btn-secondary
                        input(
                            type='radio',
                            [value]='false'
                        )
                        | Custom
                small.form-text.text-muted Whether a custom window or an OS native window should be used

            .row
                .col.col-auto
                    .form-group
                        label Dock the terminal
                        br
                        div(
                            '[(ngModel)]'='config.store.appearance.dock'
                            '(ngModelChange)'='config.save(); docking.dock()'
                            ngbRadioGroup
                        )
                            label.btn.btn-secondary
                                input(
                                    type='radio',
                                    [value]='"off"'
                                )
                                | Off
                            label.btn.btn-secondary
                                input(
                                    type='radio',
                                    [value]='"top"'
                                )
                                | Top
                            label.btn.btn-secondary
                                input(
                                    type='radio',
                                    [value]='"left"'
                                )
                                | Left
                            label.btn.btn-secondary
                                input(
                                    type='radio',
                                    [value]='"right"'
                                )
                                | Right
                            label.btn.btn-secondary
                                input(
                                    type='radio',
                                    [value]='"bottom"'
                                )
                                | Bottom

                    .form-group(*ngIf='config.store.appearance.dock != "off"')
                        label Display on
                        br
                        div(
                            '[(ngModel)]'='config.store.appearance.dockScreen'
                            '(ngModelChange)'='config.save(); docking.dock()'
                            ngbRadioGroup
                        )
                            label.btn.btn-secondary
                                input(
                                    type='radio',
                                    [value]='"current"'
                                )
                                | Current
                            label.btn.btn-secondary(*ngFor='let screen of docking.getScreens()')
                                input(
                                    type='radio',
                                    [value]='screen.id'
                                )
                                | {{screen.name}}
                .col.col-auto
                    .form-group(*ngIf='config.store.appearance.dock != "off"')
                        label Docked terminal size
                        br
                        input(
                            type='range',
                            '[(ngModel)]'='config.store.appearance.dockFill',
                            '(mouseup)'='config.save(); docking.dock()',
                            min='0.05',
                            max='1',
                            step='0.01'
                        )

    ngb-tab
        template(ngbTabTitle)
            | Appearance
        template(ngbTabContent)
            .row
                .col-sm-6
                    .form-group
                        label Preview
                        .appearance-preview(
                            [style.font-family]='config.store.appearance.font',
                            [style.font-size]='config.store.appearance.fontSize + "px"',
                        )
                            .text john@doe-pc$ ls
                            .text foo bar
                .col-sm-6
                    .form-group
                        label Font
                        input.form-control(
                            type='text',
                            [ngbTypeahead]='fontAutocomplete',
                            '[(ngModel)]'='config.store.appearance.font',
                            '(ngModelChange)'='config.save()',
                        )
                        small.form-text.text-muted Font to be used in the terminal

                    .form-group
                        label Font size
                        input.form-control(
                            type='number',
                            '[(ngModel)]'='config.store.appearance.fontSize',
                            '(ngModelChange)'='config.save()',
                        )
                        small.form-text.text-muted Text size to be used in the terminal

    ngb-tab
        template(ngbTabTitle)
            | Terminal
        template(ngbTabContent)
            .form-group
                label Terminal bell
                br
                div(
                    '[(ngModel)]'='config.store.terminal.bell'
                    '(ngModelChange)'='config.save()'
                    ngbRadioGroup
                )
                    label.btn.btn-secondary
                        input(
                            type='radio',
                            [value]='"off"'
                        )
                        | Off
                    label.btn.btn-secondary
                        input(
                            type='radio',
                            [value]='"sound"'
                        )
                        | Sound
                    label.btn.btn-secondary
                        input(
                            type='radio',
                            [value]='"notification"'
                        )
                        | Notification

    ngb-tab
        template(ngbTabTitle)
            | Hotkeys
        template(ngbTabContent)
            .form-group
                table.table
                    tr
                        th Toggle terminal window
                        td
                            hotkey-input('[(model)]'='globalHotkey')
                                
                                
